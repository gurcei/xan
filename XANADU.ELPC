#output "xanadu-basic65"

'============
.declarations
'============
  ' music related vars
  ' ------------------
  #declare music_chunk_index     ' old t
  #declare bar_index             ' old tt
  #declare map_bar_to_chunk(10)  ' old m()
  #declare v1$(4), v2$(4), v3$(4), v4$(4)

  ' palette
  ' -------
  #declare default_red(32)
  #declare default_green(32)
  #declare default_blue(32)
  #declare curr_red(32)
  #declare curr_green(32)
  #declare curr_blue(32)
  #declare fadeval, tempval

  ' misc
  ' ----
  #declare k,m,n
  #declare rainbowstr$
  #declare rainbow_x, rainbow_y
  #declare plen=0

'====
.main
'====
  gosub init
  gosub bas_logo
  ' gosub xanadu_title
  ' gosub petscii_story

  ' todo: load next part of demo (dancing muses)
  end


'========
.bas_logo
'========
  gosub poll_play
  gosub fade_to_white
  gosub draw_logo
  gosub fade_to_defaults
  gosub cycle_alt_palette_loop
  gosub fade_to_black

  return

.cycle_alt_palette_loop
'----------------------
  for m = 0 to 32*4
    gosub cycle_alt_palette
    gosub poll_play
    gosub anim_draw_presents
    sleep .05
  next m
  return

.anim_draw_presents
'------------------
  #declare pres$="presents..."

  if plen < len(pres$) then begin
    plen = plen + 1
    rainbowstr$=left$(pres$,plen)
    rainbow_x = 36
    rainbow_y = 24
    gosub print_rainbow_str
  bend
  return

.print_rainbow_str
  #declare rain_idx

  cursor rainbow_x, rainbow_y
  for rain_idx=1 to len(rainbowstr$)
    foreground mod(rain_idx-1,16)+16
    print mid$(rainbowstr$,rain_idx,1);
  next rain_idx
  return

.cycle_alt_palette
'-----------------
  #declare tempr, tempg, tempb
  tempr = peek($d100+16)
  tempg = peek($d200+16)
  tempb = peek($d300+16)
  for k = 16 to 30
    poke $d100+k, peek($d100+k+1)
    poke $d200+k, peek($d200+k+1)
    poke $d300+k, peek($d300+k+1)
  next k
  poke $d100+31, tempr
  poke $d200+31, tempg
  poke $d300+31, tempb
  return


.draw_logo
'---------
  background 1
  border 1
  edma 0, 2000, $40000, $800
  edma 0, 2000, $407d0, $ff80000
  return

.fade_to_white
'-------------
  for fadeval=0 to 16
    gosub fade_colours_to_white
    sleep .05
  next fadeval
  return

.fade_to_black
'-------------
  gosub store_curr_colours
  for fadeval=0 to 16
    gosub fade_colours_to_black
    sleep .05
  next fadeval
  return

.fade_to_defaults
'----------------
  gosub store_curr_colours
  for fadeval=0 to 16
    gosub fade_colours_to_defaults
    sleep .05
  next fadeval
  return

'====
.init
'====
  ' switch back to upper-case
  poke $d018, peek($d018) and $fd

  ^^bload "intro.dat",p($40000),r

  ' $4,0000 +------------------+ INTRO.DAT
  '         ! BAS logo chars   !
  ' $4,07D0 +..................+
  '         ! BAS logo colors  !
  ' $4,0FA0 +..................+
  '         ! 32 x RGB PALETTE !
  ' $4,1000 +..................+
  '         ! TITLE colors     !
  ' $4,270C +..................+

  gosub init_music
  gosub store_default_colours

  return

.store_default_colours
'---------------------
  for k = 0 to 31
    default_red(k)=peek($d100+k)
    default_green(k)=peek($d200+k)
    default_blue(k)=peek($d300+k)
  next k
  return

.store_curr_colours
'------------------
  for k = 0 to 31
    curr_red(k)=peek($d100+k)
    curr_green(k)=peek($d200+k)
    curr_blue(k)=peek($d300+k)
  next k
  return

.fade_colours_to_white
'---------------------
  'INPUT: fadeval=0 to 16
  tempval = fadeval / 16
  for k = 0 to 31
    poke $d100+k, default_red(k) + (15 - default_red(k)) * tempval
    poke $d200+k, default_green(k) + (15 - default_green(k)) * tempval
    poke $d300+k, default_blue(k) + (15 - default_blue(k)) * tempval
  next k
  return

.fade_colours_to_defaults
'------------------------
  'INPUT: fadeval=0 to 16
  tempval = fadeval / 16
  for k = 0 to 31
    poke $d100+k, curr_red(k) + (default_red(k)-curr_red(k)) * tempval
    poke $d200+k, curr_green(k) + (default_green(k)-curr_green(k)) * tempval
    poke $d300+k, curr_blue(k) + (default_blue(k)-curr_blue(k)) * tempval
  next k
  return

.fade_colours_to_black
'---------------------
  tempval = (16-fadeval) / 16
  for k = 0 to 31
    poke $d100+k, curr_red(k) * tempval
    poke $d200+k, curr_green(k) * tempval
    poke $d300+k, curr_blue(k) * tempval
  next k
  return

'==========
.init_music
'==========
  play
  bar_index=0
  map_bar_to_chunk(0)=0
  map_bar_to_chunk(1)=1
  map_bar_to_chunk(2)=1
  map_bar_to_chunk(3)=2
  map_bar_to_chunk(4)=3
  filter 1,100,1
  filter 2,100,1
  envelope 2,3,3,3,10,0
  envelope 4,9,4,9,8
  envelope 7,0,9,9,0,2,1100
  envelope 8,0,12,3,5,2,1100
  envelope 9,0,10,3,5,2,1100

  ' *** voice1 - guitar1 ***
  ' ------------------------
  v1$(0)="t2o6m2 qdir qc.r qdir qc.r qdir qc.r qdir qc.r"
  v1$(1)="t2o6m2 qdir qc.r qdir qc.r p9a ir qair p0idp9o5a o5iao6da q.g ido5a ibo6dg q.a igd o5bo6eg q.a ige o5ibo6dg q.a igd  o5bo6egqa ig#fe "
  v1$(2)="t2o6m2 qdir qc.r qdir qc.r  iddfq.difd o5q.#aho6cir o5#aq#ao6hcir iddfhdir  ddfq.difd o5q.#aho6cir o5#aq#ao6hcir o5q.a o6he ir
  v1$(3)="t2o6m2 igg#ghgir o5q.g o6hd ir aa#aha ir a o6d #f qe i#f qd  q.#f.edo6.g.#fe o5g i#a o6 qe o5i#a o6qe qdir qc.r qdir qc.r
  v1$(3)=v1$(3)+"o6q.g.#fe o5g i#a o6qe o5i#a o6qe qdir qc.r qdir qc.r qdir qc.r qdir qc.r"

  ' *** voice2 - guitar2 ***
  ' ------------------------
  v2$(0)="t2o5m4 qair q#g.r qair q#g.r qair q#g.r qair q#g.r"
  v2$(1)="t2o5m4 qair q#g.r qair q#g.r  o5 q.#c .d o6i#fd o5d#fao6q.d io5a#f  egbo6q.e o5ibg eao6#cq.e i#co5a egbo6q.e o5ibg eao6#cqe id#cd"
  v2$(2)="t2o5m4 qair q#g.r qair q#g.r  iaao6co5q.aiga q.fhg ir ifqf hg ir iaao6co5ha ir  aao6co5q.aiga q.fhg irfqf hg ir q.e .a o6e "
  v2$(3)="t2o5m4 igg#g hg ir q.d hg ir ddghd ir ddaqgiaqd q.a.g#f .#a .a g  o5qeigq#aig#ao6c qair q#g.r qair q#g.r q.#a .a g o5qeigq#aig#ao6c"
  v2$(3)=v2$(3)+"qair q#g.r qair q#g.r qair q#g.r qair q#g.r"

  ' *** voice3 - bass ***
  ' ---------------------
  v3$(0)="x1t7o2m1 id qr p1 icd qr icd sf#f qd ir o1ao2co1a   o2id qr p1 icd qr icd sf#f qd ir o1ao2co1a"
  v3$(1)="x1t7o2m1 id qr p1 icd qr icd sf#f qd qr ir o1a t8 o2q.#cqd ide#f q.#f o1a ia o2q#c o1q.e e iebg q.a a ia o2qc q.e e ie o1 qb q.a a o2ie qa"
  v3$(2)="x1t7o2m1 id qr p1 icd qr icd sf#f qd ir o1ao2co1a"
  v3$(2)=v3$(2)+"t9o2idddddddd o1#a#a#a#a#a#a#a#a #a#a#a#a#a#a#a#a o2ddfqdiddddddddddd o1#a#a#a#a#a#a#a#a #a#a#a t8o2qciccc o1q.aaiaaa"
  v3$(3)="o2q.ddiddd o1q.ggi#aa#a q.#a#ai#aq#a q.aaiaqa o2q.ddio1go2qd q.eeieqe o1q.aaiaqa t7o2 id qr p1 icd qr icd sf#f qd ir o1ao2co1a"
  v3$(3)=v3$(3)+"o2q.eeieqe o1q.aaiaqa t7o2 id qr p1 icd qr icd sf#f qd ir o1ao2co1a  t7o2 id qr p1 icd qr icd sf#f qd ir o1ao2co1a"

  ' *** voice4 - melody ***
  ' -----------------------
  v4$(0)=""
  v4$(1)="t4o5p0 qr m2id m4qd p5 m1o4#g h.a iaqa   o5q.e h#f ir #f#fa qg ig#f w m5 .g p9m2o4ia o5i.b.a sg#f agabab qg o4iab o5h#f sg#f q.e.d"
  v4$(2)="o5t4p7wdhrq.ricp5o5iddfq.gifdq.fsedhciffaqgifdscp2h.dp5i.ricddfq.gifd q.f sed hc iffaqgifd igp1h.a p7ira"
  v4$(3)="t4 io6dd#dqdico5#ah.#aq.r iaa#aqaiagp1wap7ir"
  v4$(3)=v4$(3)+"hri#fgaq.gi#fg#fherir dhdrr ir#fgaq.gi#fg#fherir dhd"
  return

'---------
.poll_play
'---------
  if rplay(1) then return

  music_chunk_index=map_bar_to_chunk(bar_index)
  
  play v1$(music_chunk_index),v3$(music_chunk_index),v4$(music_chunk_index)
  sleep .05
  play ,,,v2$(music_chunk_index),v3$(music_chunk_index),v4$(music_chunk_index)

  bar_index=bar_index+1
  if bar_index=5 then bar_index=1
  return
ÿ