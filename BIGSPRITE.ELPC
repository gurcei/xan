#output "bigsprite"

#declare a$ = ""
#declare idx = 0
#declare value = 0
#declare loc

#declare SPRX64EN = $d057
#declare SPRHGTEN = $d055
#declare SPRHGT   = $d056

#declare SPRPTR16 = $d06e
#declare SPRPTRADR = $d06c
#declare SPRPTRBNK = $d06e

' switch to 80x50
bank 128
{x5E}{x5E}setbit $d05d, 7
poke $d031, $e8

' move SCRNPTR to bank4 - $8000
{x5E}{x5E}wpoke $d060,$8000
poke $d062,$04

' let all sprites be 64 bits wide
poke SPRX64EN, 255

' let all sprites be 64 bits high
poke SPRHGTEN, 255
poke SPRHGT, 64

' $4,0000 +------------------+
'         ! SPRPTR (8 words) !
' $4,0040 +------------------+ <-- sprptr $1001
'         ! MUSE#1 - frame 0 !
' $4,0240 +------------------+ <-- sprptr $1001 + 8
'         ! MUSE#1 frames1-5 !
' $4,0E40 +------------------+ <-- sprptr $1001 + 8*6
'         ! MUSE#2 frames0-5 !
' $4,1A40 +------------------+ <-- sprptr $1001 + 8*12
'         ! MUSES#3 to #9    !
' $4,6C40 +------------------+
'         ! 32 x RGB PALETTE !
' $4,6CA0 +------------------+

' $4,8000 +------------------+
'         ! SCREEN MEM 80x50 !
' $4,8FA0 +------------------+


' enforce sprites into BANK4 and SPRPTR16 bit turned on
poke SPRPTRBNK, 4+128           
' wpoke SPRPTRADR, 0
{x5E}{x5E}wpoke $d06c, 0

' load 64x64 sprite data
{x5E}{x5E}bload "muse.dat",p($40040),r

' load oli frames to bank 5
{x5E}{x5E}bload "oli.dat",p($50000),r

' switch palette
#declare red,green,blue
loc=$46c40
for idx=0 to 31
  red=peek(loc):loc=loc+1
  green=peek(loc):loc=loc+1
  blue=peek(loc):loc=loc+1
print "r=";red;", g=";green;", b=";blue
  poke $d100+idx,red
  poke $d200+idx,green
  poke $d300+idx,blue
next idx

' clear 80x50 chars and colour ram
for idx=0 to 3999:poke $48000+idx,160:poke $ff80000+idx,6:next idx
      
' display sprite
#declare sprclr,offx
sprclr = 30
offx=25
sprite 0,1,sprclr
movspr 0,0+offx,50
sprite 1,1,sprclr
movspr 1,85+offx,50
sprite 2,1,sprclr
movspr 2,171+offx,50
sprite 3,1,sprclr
movspr 3,256+offx,50

sprite 4,1,sprclr
movspr 4,0+offx+8,180
sprite 5,1,sprclr
movspr 5,85+offx+8,180
sprite 6,1,sprclr
movspr 6,171+offx,180
sprite 7,1,sprclr
movspr 7,256+offx,180

' point sprite0 to $4040
bank 4
{x5E}{x5E}wpoke 0, $1001
{x5E}{x5E}wpoke 2, $1001+8*6
{x5E}{x5E}wpoke 4, $1001+8*12
{x5E}{x5E}wpoke 6, $1001+8*18
{x5E}{x5E}wpoke 8, $1001+8*24
{x5E}{x5E}wpoke 10, $1001+8*30
{x5E}{x5E}wpoke 12, $1001+8*42
{x5E}{x5E}wpoke 14, $1001+8*48

' set background, border
background 6
border 14

idx = 0
{x5E}{x5E}oi=0:od=0
.loop

' select sprite frame
bank 4
poke 0, 1+8*idx
poke 2, 1+8*(idx+6)
poke 4, 1+8*(idx+12)
poke 6, 1+8*(idx+18)
poke 8, 1+8*(idx+24)
value = $1001+8*(idx+30)
poke 10, value and 255
poke 11, (value / 256)
value = $1001+8*(idx+42)
poke 12, value and 255
poke 13, (value / 256)
value = $1001+8*(idx+48)
poke 14, value and 255
poke 15, (value / 256)
gosub drawolivia
sleep .3
idx=idx+1
if idx=6 then idx=0
get a$:if a$="" then goto loop

.ender
for idx = 0 to 7
  sprite idx,0
next idx

' switch to 80x25
bank 128
poke $d031, $e0

' restore SCNPTR to bank 0 - $0800
{x5E}{x5E}wpoke $d060, $0800
poke $d062, 0

palette restore
end

.drawolivia

#declare x,y,z,bval,olidx
{x5E}{x5E}if oi=0 then lo=$46ca0
{x5E}{x5E}if oi>0 then lo=$50000+4000*(oi-1)

loc=$46ca0 ' first olivia frame
{x5E}{x5E}edma 0,4000,lo,$ff80000

{x5E}{x5E}if od = 0 then oi = oi + 1:if oi > 16 then od = 1:oi=16
{x5E}{x5E}if od = 1 then oi = oi - 1:if oi < 1 then od = 0

return
ÿ